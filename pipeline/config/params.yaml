##### Global ####
kmer_size: 6
threads: all
# Inside the <outdir> folder will be created the "{kmer_size}mer/kmer-count/" 
# and "{kmer_size}mer/fcgr/" directories. 
# The first one with .txt files containing tuples of (k-mer, count)
# The second one is the FCGR matrix in stored in a .npy file that is used to train models
# NOTE: the .txt files are removed after the .npy file is created, since the same info is stored in the FCGR (and in less disk space). 
# If they are needed, remove temp() in 'rule count_kmers' in rules/create_fcgr.smk 

outdir: /data/bacteria/experiments/autoencoders
labels: /data/bacteria/labels_krakenbracken_by_sampleid.txt

##### create_fcgr.smk ######
fcgr:
  dir_tarfiles: /data/bacteria/datasets/661k-bacteria #/data/bacteria/subsample-dataset/small #""

# kmer counter
kmc:
  max_ram: 4
  tmp: "tmp-kmc"
  threads: 4
  min_threshold: 1
  max_threshold: 1000000

##### create_index.smk ######  
train:
  name_experiment: 02_07_2024-1 #<mm_dd_aaaa-nexperiment>
  latent_dim: 100
  epochs: 100  
  batch_size: 256 # best trade off 
  architecture: 'AutoencoderFCGR'
  patiente_early_stopping: 30
  patiente_learning_rate: 15
  train_size: 0.8
  optimizer: ranger
  # choose combinations of loss and activation functions
  # (loss, output_activation, hidden_activation) triplets will be run as zip() (not all combinations)
  loss: # categorical_crossentropy binary_crossentropy mean_squared_error 
    # - mean_squared_error 
    - binary_crossentropy
  output_activation: # sigmoid relu softmax  
    # - relu 
    - sigmoid
  hidden_activation: # sigmoid relu softmax 
    # - relu 
    - leaky_relu
  preprocessing: scale_zero_one # distribution scale_zero_one 
  seed: 42
  kfold: 5

outliers:
  percentil_avg_distance: 99 # [0,100]% 
  
# ##### query_index.smk ######
# # be sure that 'name_experiment' contains the index and encoder
# query:
#   # dir_fasta: "/data/bacteria/test-query" # all fasta files inside the folder will be used to query the index
#   # outdir: "output-query"
#   dir_fasta: "/data/bacteria/gold-standard-datasets/GEBA" # all fasta files inside the folder will be used to query the index
#   outdir: "/data/bacteria/tools-evaluation/panspace/GEBA"
#   # dir_fasta: /data/bacteria/ena-nctc3000
#   # dir_fcgr: /data/bacteria/ena-nctc3000-panspace/fcgr
#   # outdir: /data/bacteria/ena-nctc3000-panspace-mse


# download

# maximum number of download threads at a time (note: too many might slow down download speed and make Zenodo block your requests)
# WARNING: this parameter is ignored when running on a cluster
max_download_threads: 8

# how many times to retry a download if it fails
download_retries: 3

# how many seconds to wait between retries
download_retry_wait: 10

# WARNING: this parameter is ignored when running on a cluster
max_io_heavy_threads: 8

max_ram_gb: 12